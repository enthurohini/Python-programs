'''
Problem Statement

This problem is a programming version of Problem 2 from projecteuler.net

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1,2,3,5,8,13,21,34,55,89,⋯

By considering the terms in the Fibonacci sequence whose values do not exceed N, find the sum of the even-valued terms.

Input Format
First line contains T that denotes the number of test cases. This is followed by T lines, each containing an integer, N.

Output Format
Print the required answer for each test case. 

Constraints
1≤T≤105
10≤N≤4×1016

Sample Input

2
10
100

Sample Output

10
44

'''


# Enter your code here. Read input from STDIN. Print output to STDOUT
T = input()
N = []
for i in range(T):
    N.append(input())
n = max(N)
f = [1,2]
def feb(n):
    while(max(f)<=n):
        a = f[-1] + f[-2]
        #print a
        #if(a<n):
        f.append(a)

for k in N:
    feb(k)
    sum = 0
    for i in f:
        if (i%2 == 0) and i<=k:
            sum= sum +i
    f = [1,2]
    print sum
